<?php

namespace Modules\Danhgia\Http\Controllers;

use App\Api\V1\Controllers\BaseController;
use Illuminate\Http\Request;
use Illuminate\Http\Response;
use Illuminate\Routing\Controller;
use Modules\Danhgia\Entities\Question;
use Modules\Danhgia\Http\Requests\CreateQuestionRequest;
use Yajra\Datatables\Datatables;
class QuestionController extends BaseController
{
    /**
     * Display a listing of the resource.
     * @return Response
     */
    public function index()
    {
        return view('danhgia::question.list');
    }

    /**
     * Show the form for creating a new resource.
     * @return Response
     */
    public function create()
    {
        return view('danhgia::create');
    }

    /**
     * Store a newly created resource in storage.
     * @param  Request $request
     * @return Response
     */
    public function store(CreateQuestionRequest $request)
    {
        $data = '';
        $arr = [];
        if($request->type==3) {
            $arrData = explode(',', $request->data);
            if (count($arrData) > 1) {
                foreach ($arrData as $val) {
                    list($key, $val) = explode(':', $val);
                    $arr[] = array($key => $val);
                }
                $data = json_encode($arr);
            }
            else{
                 return $this->responseServerError('bạn phải nhập đáp án');
            }
        }

        $dataInsert = $request->data_only();
        $dataInsert['data'] = $data;
        $question = Question::create($dataInsert);
        return $this->responseCreated($question);
//
    }

    /**
     * Show the specified resource.
     * @return Response
     */
    public function show($id)
    {
        $question= Question::find($id);
        $arr= [];
        if($question['type']==1){
            $arr['type']='Đánh giá theo mức độ';
        }
        if($question['type']==2){
            $arr['type']='Trả lời tay';
        }
        if($question['type']==3){
            $arr['type']='Chọn đáp án';
        }
        $arr['name']=$question['name'];
        $arr['description']=$question['description'];
        $arr['data']=json_decode($question['data']);
        return $arr;
    }

    public function update(CreateQuestionRequest $request,$id )
    {
        $row=Question::find($id);
        if (!$row) {
            return $this->responseBad("ID not exist");
        }
        $data = '';
        $arr = [];
        if($request->type==3) {
            $arrData = explode(',', $request->data);
            if (count($arrData) > 1) {
                foreach ($arrData as $val) {
                    list($key, $val) = explode(':', $val);
                    $arr[] = array($key => $val);
                }
                $data = json_encode($arr);
            }
            else{
                return $this->responseServerError('bạn phải nhập đáp án');
            }
        }

        $dataInsert = $request->data_only();
        $dataInsert['data'] = $data;
        $question = Question::find($id)->update($dataInsert);
        return $this->responseCreated($question);
//

    }
    public function anyData(){
        $data     =Question::select();
//            ->with('position')
//            ->with('user');
        $dbResult = Datatables::of($data)
            ->addColumn('action', function ($data) {
//                $action = '<a href="" class="btn btn-xs btn-success" title="Chi tiết"><i class="fa fa-eye"></i></a> &nbsp;';
                $action = '<a href="javascript:setUpdate('.$data->id.')" class="btn btn-xs btn-primary" title="Chỉnh sửa"><i class="fa fa-edit"></i></a> &nbsp;';
                $action .= '<a href="javascript:setDelete('.$data->id.')" class="btn btn-xs btn-danger" title="Xóa"><i class="fa fa-times"></i> </a> &nbsp;';

                return $action;
            })
            ->editColumn('type', function ($data) {
//                $action = '<a href="" class="btn btn-xs btn-success" title="Chi tiết"><i class="fa fa-eye"></i></a> &nbsp;';
               if($data->type==1){
                   return "Đánh giá theo mức độ";
               }
                if($data->type==2){
                    return "Trả lời tay";
                }
                if($data->type==3){
                    return "Chọn đáp án";
                }

            })
            ->make(TRUE);

        return $dbResult;
    }
        public function delete($id)
        {
            $data= new Question();
            $data->destroy($id);
            return parent::responseDeleted($data); // TODO: Change the autogenerated stub
        }
    public function get_all(){
        return Question::all()->pluck('name','id')->toArray();
    }

}
