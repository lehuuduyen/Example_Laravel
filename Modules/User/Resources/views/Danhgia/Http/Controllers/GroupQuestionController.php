<?php

namespace Modules\Danhgia\Http\Controllers;

use App\Api\V1\Controllers\BaseController;
use Illuminate\Http\Request;
use Illuminate\Http\Response;
use Illuminate\Routing\Controller;

use Illuminate\Support\Facades\DB;
use Modules\Danhgia\Entities\GroupQuestion;
use Modules\Danhgia\Entities\GroupQuestionDetail;
use Modules\Danhgia\Http\Requests\CreateGroupQuestionRequest;
use Yajra\DataTables\DataTables;

class GroupQuestionController extends BaseController
{
    /**
     * Display a listing of the resource.
     * @return Response
     */
    public function index()
    {
        return view('danhgia::group_question.list');
    }

    /**
     * Show the form for creating a new resource.
     * @return Response
     */
    public function create()
    {
        return view('danhgia::create');
    }

    /**
     * Store a newly created resource in storage.
     * @param  Request $request
     * @return Response
     */
    public function store(CreateGroupQuestionRequest $request)
    {
        $create=GroupQuestion::create($request->data_only());
        return $this->responseCreated($create);
    }

    /**
     * Show the specified resource.
     * @return Response
     */
    public function view_detail()
    {
        $QuestionController= new QuestionController();
        $QuestionController=$QuestionController->get_all();
        return view('danhgia::group_question.detail',compact('QuestionController'));
    }
    public function show($id)
    {
        return GroupQuestion::find($id);
    }

    /**
     * Show the form for editing the specified resource.
     * @return Response
     */
    public function edit()
    {
        return view('danhgia::edit');
    }

    /**
     * Update the specified resource in storage.
     * @param  Request $request
     * @return Response
     */
    public function update(CreateGroupQuestionRequest $request,$id)
    {
        $create=GroupQuestion::find($id)->update($request->data_only());
        return $this->responseCreated($create);
    }

    /**
     * Remove the specified resource from storage.
     * @return Response
     */
    public function destroy()
    {
    }
    public function anyData(){
        $data     =GroupQuestion::select();
//            ->with('position')
//            ->with('user');
        $dbResult = DataTables::of($data)
            ->addColumn('action', function ($data) {
                $action ='<a href="http://danhgia.dev-altamedia.com/danhgia/group_question/view_detail/'.$data->id.'" class="btn btn-xs btn-success" title="Chi tiết"><i class="fa fa-eye"></i></a>&nbsp;';
                $action .= '<a href="javascript:setUpdate('.$data->id.')" class="btn btn-xs btn-primary" title="Chỉnh sửa"><i class="fa fa-edit"></i></a> &nbsp;';
                $action .= '<a href="javascript:setDelete('.$data->id.')" class="btn btn-xs btn-danger" title="Xóa"><i class="fa fa-times"></i> </a> &nbsp;';

                return $action;
            })

            ->make(TRUE);

        return $dbResult;
    }
    public function anydata_detail($id){
        $data     =GroupQuestionDetail::select()
//            ->with('position')
           ->join('question','question.id','group_question_detail.question_id')
            ->where('group_question_id',$id);
        $dbResult = DataTables::of($data)
            ->addColumn('action', function ($data) {
                 $action = '<a href="javascript:setDelete('.$data->id.')" class="btn btn-xs btn-danger" title="Xóa"><i class="fa fa-times"></i> </a> &nbsp;';

                return $action;
            })

            ->make(TRUE);

        return $dbResult;
    }
    public function delete($id)
    {
        $data= new GroupQuestion();
        $data->destroy($id);
        return parent::responseDeleted($data); // TODO: Change the autogenerated stub
    }
    public function delete_detail($id,$group)
    {
        $data= GroupQuestionDetail::where('question_id', '=',$id)->where('group_question_id',$group)->delete();

        return parent::responseDeleted($data); // TODO: Change the autogenerated stub
    }
    public function store_detail(Request $request)
    {
        $create=GroupQuestionDetail::create($request->all());
        return $this->responseCreated($create);
    }
    public function get_all(){
        return DB::table('group_question')->where('status','1')->pluck('name','id')->toArray();
    }
}
